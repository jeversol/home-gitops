name: Build and Push Docker Images

on:
  push:
    branches: [main]
    paths:
      - 'infrastructure/cluster-multitool/Dockerfile'
      - 'infrastructure/cluster/track-versions.yaml'
      - '.github/workflows/docker-build.yml'

jobs:
  build-cluster-multitool:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: jeversol
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
          
      - name: Read versions from track-versions.yaml
        id: versions
        run: |
          KUBERNETES_VERSION=$(yq '.kubernetesVersion' infrastructure/cluster/track-versions.yaml)
          TALOS_VERSION=$(yq '.talosVersion' infrastructure/cluster/track-versions.yaml)
          echo "kubernetes_version=$KUBERNETES_VERSION" >> $GITHUB_OUTPUT
          echo "talos_version=$TALOS_VERSION" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/jeversol/cluster-multitool
          tags: |
            latest
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: infrastructure/cluster-multitool
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          build-args: |
            KUBERNETES_VERSION=${{ steps.versions.outputs.kubernetes_version }}
            TALOS_VERSION=${{ steps.versions.outputs.talos_version }}