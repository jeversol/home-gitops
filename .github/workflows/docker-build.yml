name: Build and Push Harry-Botter Docker Image

on:
  push:
    paths:
      - 'infrastructure/harry-botter/Dockerfile'
      - 'infrastructure/harry-botter/configmap.yaml'
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Generate GitHub App Token
        id: app-token
        run: |
          # Install PyJWT for token generation
          pip install PyJWT cryptography
          
          # Generate JWT and get installation token
          python3 << 'EOF'
          import jwt
          import requests
          import os
          from datetime import datetime, UTC
          
          APP_ID = 1360871
          INSTALLATION_ID = 69529304
          
          # Load private key from secret
          private_key = """${{ secrets.HARRY_BOTTER_PRIVATE_KEY }}"""
          
          # Generate JWT
          now = int(datetime.now(UTC).timestamp())
          payload = {
              "iat": now - 60,
              "exp": now + (10 * 60),
              "iss": APP_ID
          }
          jwt_token = jwt.encode(payload, private_key, algorithm="RS256")
          
          # Get installation token
          headers = {
              "Authorization": f"Bearer {jwt_token}",
              "Accept": "application/vnd.github+json"
          }
          url = f"https://api.github.com/app/installations/{INSTALLATION_ID}/access_tokens"
          response = requests.post(url, headers=headers, timeout=30)
          response.raise_for_status()
          
          token = response.json()["token"]
          print(f"::add-mask::{token}")
          print(f"token={token}", file=open(os.environ['GITHUB_OUTPUT'], 'a'))
          EOF

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: jeversol
          password: ${{ steps.app-token.outputs.token }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/jeversol/harry-botter
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: infrastructure/harry-botter
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max