name: Validate GitOps Manifests
on:
  push:
    branches: [ main ]
  pull_request:
    paths:
      - '**.yaml'
      - '**.yml'
      - '.github/workflows/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Increased for more comprehensive validation
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install additional tools
        run: |
          # Use pre-installed tools: kubectl 1.33.3, helm 3.18.4, kustomize 5.7.0
          echo "Using pre-installed tools:"
          kubectl version --client
          helm version --short
          kustomize version
          
          # Install only missing tools
          pip install --user yamllint
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          

      - name: Lint YAML
        run: |
          echo "üîç Linting YAML files..."
          export PATH="$HOME/.local/bin:$PATH"
          yamllint . || echo "‚ö†Ô∏è YAML linting found issues but continuing..."


      - name: Test kustomize builds
        run: |
          echo "üîç Testing kustomize builds..."
          
          # Test infrastructure kustomizations
          echo "Testing infrastructure builds..."
          for dir in infrastructure/*/; do
            if [ -f "$dir/kustomization.yaml" ]; then
              echo "Building: $dir"
              if ! kustomize build "$dir" > /dev/null; then
                echo "‚ùå Kustomize build failed for: $dir"
                exit 1
              fi
            fi
          done
          
          # Test app kustomizations  
          echo "Testing app builds..."
          for dir in apps/*/; do
            if [ -f "$dir/kustomization.yaml" ]; then
              echo "Building: $dir"
              if ! kustomize build "$dir" > /dev/null; then
                echo "‚ùå Kustomize build failed for: $dir"
                exit 1
              fi
            fi
          done
          
          # Test nested kustomizations (like media apps)
          find apps/ -name "kustomization.yaml" -not -path "apps/*/kustomization.yaml" | while read -r kustomization; do
            dir=$(dirname "$kustomization")
            echo "Building: $dir"
            if ! kustomize build "$dir" > /dev/null; then
              echo "‚ùå Kustomize build failed for: $dir"
              exit 1
            fi
          done
          
          echo "‚úÖ All kustomize builds successful"

      - name: Check resource requirements
        run: |
          echo "üîç Checking resource requirements..."
          
          # Check that containers have resource limits
          find . -name "*.yaml" -exec grep -l "kind: Deployment\|kind: StatefulSet\|kind: DaemonSet" {} \; | while read -r file; do
            if grep -q "containers:" "$file"; then
              if ! grep -A 20 "containers:" "$file" | grep -q "limits:"; then
                echo "‚ö†Ô∏è  Missing resource limits in: $file"
              fi
            fi
          done
          
          echo "‚úÖ Resource requirements check completed"

      - name: Validate Helm templates
        run: |
          echo "üîç Validating Helm templates..."
          # Quick helm template validation for any charts
          if find . -name 'Chart.yaml' -o -name 'values.yaml' | grep -q .; then
            find . -name 'Chart.yaml' -exec dirname {} \; | \
            xargs -I {} helm template test {} --dry-run
          else
            echo "No Helm charts found to validate"
          fi