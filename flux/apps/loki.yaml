---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: flux-system
spec:
  interval: 30m
  releaseName: loki
  targetNamespace: o11y
  chart:
    spec:
      chart: loki
      version: "6.45.2"  # renovate: datasource=helm depName=loki registryUrl=https://grafana.github.io/helm-charts
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    # Deploy in monolithic mode (single pod)
    deploymentMode: SingleBinary

    loki:
      # Disable multi-tenancy
      auth_enabled: false

      # Common config for monolithic mode
      commonConfig:
        replication_factor: 1
        path_prefix: /var/loki

      # Loki configuration
      schemaConfig:
        configs:
          - from: "2024-01-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h

      # Ingester configuration
      ingester:
        chunk_encoding: snappy

      # Query limits
      querier:
        max_concurrent: 4

      # Storage configuration for single-binary TSDB mode
      storage:
        type: s3
        bucketNames:
          chunks: loki
          ruler: loki
          admin: loki
        s3:
          endpoint: nas.i.recompiled.org:3900
          region: us-east-1
          secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
          accessKeyId: ${AWS_ACCESS_KEY_ID}
          s3ForcePathStyle: true
          insecure: false
      # storage feeds Helm's helpers; storage_config is the actual Loki block.
      storage_config:
        aws:
          bucketnames: loki
          endpoint: nas.i.recompiled.org:3900
          region: us-east-1
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          access_key_id: ${AWS_ACCESS_KEY_ID}
          s3forcepathstyle: true
          insecure: false
        tsdb_shipper:
          active_index_directory: /var/loki/index
          cache_location: /var/loki/cache

      # Retention configuration (30 days)
      limits_config:
        retention_period: 720h

      # Pattern ingester for log pattern detection
      pattern_ingester:
        enabled: true

      # Compactor configuration - REQUIRED for retention to work
      compactor:
        working_directory: /var/loki/compactor
        compaction_interval: 10m
        retention_enabled: true
        retention_delete_delay: 2h
        retention_delete_worker_count: 150
        delete_request_store: s3

    # Disable ruler component entirely
    ruler:
      enabled: false

    # Disable loki-canary
    lokiCanary:
      enabled: false

    # Single binary deployment settings
    singleBinary:
      replicas: 1
      # Enable environment variable expansion in config
      extraArgs:
        - -config.expand-env=true
      # Inject S3 credentials from secret
      extraEnvFrom:
        - secretRef:
            name: loki-s3-credentials
      persistence:
        enabled: true
        storageClass: longhorn
        size: 10Gi
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi

    # Zero out other deployment modes
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0

    # Disable test pods
    test:
      enabled: false

    # Disable monitoring (we already have prometheus)
    monitoring:
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false

    # Disable caches for true monolithic mode
    chunksCache:
      enabled: false
    resultsCache:
      enabled: false

    # Disable MinIO (we're using Garage)
    minio:
      enabled: false

    # Disable gateway (unnecessary for monolithic mode)
    gateway:
      enabled: false
