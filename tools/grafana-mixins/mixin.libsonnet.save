local kubernetes = import "kubernetes-mixin/mixin.libsonnet";
local node = import "node-mixin/mixin.libsonnet";

// Combine kubernetes and node mixins with macOS customizations
local rawMixins = kubernetes + node + {
  _config+:: {
    // Kubernetes mixin config
    kubeStateMetricsSelector: 'job="kube-state-metrics"',
    cadvisorSelector: 'job="kubernetes-cadvisor"',
    nodeExporterSelector: 'job="node-exporter"',
    kubeletSelector: 'job="kubelet"',

    // macOS-specific device patterns for node-exporter
    diskDeviceSelector: 'device=~"disk[0-9]+.*"',  // macOS disk naming (disk0, disk1, etc.)
    networkDeviceSelector: 'device=~"en[0-9]+|bridge[0-9]+|utun[0-9]+|lo[0-9]*"',  // macOS network interfaces
    fsSelector: 'fstype!~"devfs|tmpfs|autofs|msdos"',  // macOS filesystem types to exclude

    // Override disk I/O device regex for macOS compatibility
    diskIOSelector: 'device=~"disk[0-9]+.*"',

    // Dashboard customization
    grafanaK8s+:: {
      dashboardTags: ['kubernetes', 'mixin'],
      dashboardNamePrefix: '',
    },
  },
};

// Safely get the list of dashboards and filter out nodes-aix.json if present
local dashboards =
  if std.objectHas(rawMixins, 'grafanaDashboards') && std.objectHas(rawMixins.grafanaDashboards, 'dashboards') then
    local bd = rawMixins.grafanaDashboards.dashboards;
    // Normalize to array of dashboard objects
    local arr = if std.type(bd) == 'array' then bd else std.map(function(k) bd[k], std.objectFields(bd));
    // Filter out the nodes-aix dashboard (name inside is likely 'nodes-aix')
    std.filter(function(d) d.metadata.name != 'nodes-aix', arr)
  else
    [];

// Final output: merge rawMixins and override with filtered dashboards
//(rawMixins) + { grafanaDashboards+: { dashboards: dashboards } }

local rawDashboardsArr =
  if std.objectHas(rawMixins, 'grafanaDashboards') && std.objectHas(rawMixins.grafanaDashboards, 'dashboards') then
    local bd = rawMixins.grafanaDashboards.dashboards;
    if std.type(bd) == 'array' then bd else std.map(function(k) bd[k], std.objectFields(bd))
  else
    [];

{
  seenNames: std.map(function(d) d.metadata.name, rawDashboardsArr),
} + rawMixins